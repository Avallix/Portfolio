{"config":{"index_options":{"tokenizer":"lunr","trimmer":"lunr.trimmer"},"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! Who am I? My name is Austin Krekula, I was born in Fayetteville NC in 1997. I'm the first of 4 children. I am a soldier in the Iowa Army National Guard, its been a little over 6 years since I joined. I'm currently in pursuit of a bachelors degree in Cyber Security Engineering at ISU and hoping to soon start a Masters in the same. I really like reading, I love to read about culture, theology, and fiction. I enjoy studying religion, philosophy, and history. Some of my favorite activities are working out, going on walks, playing board games, and playing volleyball. Hopes and Dreams Career Objectives: After completing my degree in Cyber Security Engineering, I will be commissioning into the Iowa National Guard as Signal Officer. In this position I'll use skils in signals and technology, as well as communications systems, information systems and worldwide networks. Continuing Education: Meanwhile I will be moving into the masters program for Cyber Security here at Iowa State. I plan to continue pursuing education surrounding information security, including certificates like Certified Information Systems Security Professional (CISSP), Certified Information Security Manager (CISM), and CompTIA Security+. Skills Programming Languages: Java, C, Python, R, VHDL, Verilog, JS, HTML Applications: Revit, SpecsIntact Networking & Security: VPNs, VDIs, Cisco System Architecture: Processors, MIPS, x86 Version Control Systems: GitHub, GitLab Documentation: Coordinating content across various documents, Understanding standards publications, Reading of standards documentation, Review of implementation specifications","title":"<h1 class=\"centered-header\">Welcome!</h1>"},{"location":"#welcome","text":"","title":"Welcome!"},{"location":"#who-am-i","text":"My name is Austin Krekula, I was born in Fayetteville NC in 1997. I'm the first of 4 children. I am a soldier in the Iowa Army National Guard, its been a little over 6 years since I joined. I'm currently in pursuit of a bachelors degree in Cyber Security Engineering at ISU and hoping to soon start a Masters in the same. I really like reading, I love to read about culture, theology, and fiction. I enjoy studying religion, philosophy, and history. Some of my favorite activities are working out, going on walks, playing board games, and playing volleyball.","title":"Who am I?"},{"location":"#hopes-and-dreams","text":"Career Objectives: After completing my degree in Cyber Security Engineering, I will be commissioning into the Iowa National Guard as Signal Officer. In this position I'll use skils in signals and technology, as well as communications systems, information systems and worldwide networks. Continuing Education: Meanwhile I will be moving into the masters program for Cyber Security here at Iowa State. I plan to continue pursuing education surrounding information security, including certificates like Certified Information Systems Security Professional (CISSP), Certified Information Security Manager (CISM), and CompTIA Security+.","title":"Hopes and Dreams"},{"location":"#skills","text":"Programming Languages: Java, C, Python, R, VHDL, Verilog, JS, HTML Applications: Revit, SpecsIntact Networking & Security: VPNs, VDIs, Cisco System Architecture: Processors, MIPS, x86 Version Control Systems: GitHub, GitLab Documentation: Coordinating content across various documents, Understanding standards publications, Reading of standards documentation, Review of implementation specifications","title":"Skills"},{"location":"contact/","text":"Contact Austin James Krekula Cell Phone: (515) 943-6156 Emails: - akrekula@iastate.edu - krekulaustin@gmail.com","title":"Contact"},{"location":"contact/#contact","text":"Austin James Krekula Cell Phone: (515) 943-6156 Emails: - akrekula@iastate.edu - krekulaustin@gmail.com","title":"Contact"},{"location":"internship/","text":"Omaha District Army Corps of Engineers Cyber Security Engineering Technician Duration: May 2023 \u2013 July 2023 Tasks: During this internship I conducted thorough reviews of electrical and control system implementation specifications. Ensured that implementations adhered to risk management publications such as: NIST SP 800-53 NIST SP 800-37 UFC 4-010-06 DoDI 8510.01 DoDI 8500.01 I seamlessly coordinated content across various documents, including design specifications, design analysis, contract specifications, and federal cyber policies. This coordination ensured that projects fully met the policy standards set by the Army Corps of Engineers. Field Trip: From July 3 - 7 a co-intern and I went on a trip to Fort Leonard Wood Missouri where we toured the construction of the General Leonard Wood Army Community Hospital, and some of the surrounding IT infrastructure. This was an incerdible trip where I learned about the struggles and dynamics of implementing large scale, interdependant, multimodal controll systems in an environment with a large amount of stakeholders. A major element of this tour was when we entered the older United States Army Hospital at Fort Leonard Wood. Guided by the senior information systems security manager, he walked us through his the process of developing and security testing an isolated control systems board, which is a smaller version of a larger system, containing the network architechure and all major components identical to the larger system. I was guided throught the fire detection and supression system. Using a smaller system to verify and security test elements of a larger system allows for a reduced number of isolated tests before a system design can be verified. Knowledge gained: Review of electrical and control system implementation specifications Coordinating content across various documents Understanding standards publications and reading of standards documentation Use of Revit CAD Use of SpecsIntact","title":"Internship"},{"location":"projects/","text":"Projects Calendar App Development - ComS 309 Project Description: This was a semester long group project with a team 4 students. We selected a theme, chose functional and asthetic requirements, and used the tools shown in class to create our application in 16 weeks. What we selected was a calendar coordination/ social media application where users can form groups and share events with their friends and group members, while the app automatically coordinates scheduels based on availability. Documentation: Project Block Diagram Program Requirements: User Login Add events, users, and grous Search for users, gropus, and events by name or tag Search for events by location Coordination of automatic event invitations Users can only view events within groups/ invite lists Users cannot view schedule details of other users Public events User to Uder, group, and event char function Google maps integration Notification system The purpose of this application is to streamline the coordination of availability between friends, coworkers, and groups so that they can have an easier time deciding on times, places, and invitees for events. My Role: I originated the idea for this application, and was instrumental in its higher level design throughout the entire project. When working on code, I programmed the back end with a partner, I integrated API calls, managed the MySQL database, implemented a controller, server, repository model for the back-end's interraction with both the database and the front end. Skills or knowledge gained: On this project I learned to work with Intelli-J, how to write and call API's, manage a MySQL database, back end development, the Springboot framework, the use of postman for back-end development, how to use websockets, and version control with Gitlab. Resources used: During this project we used tools such as Intelli-J, postman, SQL Workbench, Sprinbboot, Android Studio, Docker, Websockets, and various API's. Pipeline Processor Design - CprE 381 Project Description: This was a semester long project in which I and a partner learned about the elements and design of a computer processor, pipelining, and the MIPS assembly architechure. We designed the processor fron the most basic elements, I built the ALU, the barrel shifter and others from basic components like simple logical gates. Those larger elemants were then combined into the different stages of the pipeline untill we had fully implemented the high level schematic design. This was all done in VDHL. Our design was fully able to run MIPS architechure instruction code from a binary file, we tested it on various sorting algorithms. Program Requirements: -Processor must be implemented in a pipeline design - Processor must run MIPS assembly with few errors My Role: I and my partner colaboratively designed the higher level logic, we also worked the logical testing and troubleshooting together. I independantly designed the ALU, the registers, and the instruction memory logic. Skills or knowledge gained: The MIPS processor architecture was completly new to me at the begining of this class. I learned how to code in MIPS assembly, how the logic of the processor could be implemented in both single-cycle and pipeline processors, I learned VDHL code used for writing the logical circuits, how to read clock cycle diagrams, and how to troubleshoot the stages of a pipeline. Resources used: This project was entirely writen in VDHL using ModelSim. Roomba Martian Navigator - CprE 288 Project Description: This was an incredibly enjoyable project. Again, it was a semester long. We designed and implemented the C code to run on an ARM Cortex M4 based microcontroller with various inputs and outputs. This microcontroller interfaced with UART, an IR sensor, and a roomba with pressure sensors. Our project was closed and open ended, we were given certian specifications, listed below, but we were able to design the implementation in an open ended way. We were also allowd to define the goal our roomba robot would fulfill. Program Requirements: Microcontroller must controll the roomba to preform specified task Microcontroller must interface with UART and IR sensors externally mounted to the roombs Microcontroller must detect objects using IR and roomba pressure sensors Microcontroller must correctly identify different kinds of obstacles Microcontroller must use UART to send data to a moniter Microcontroller must use UART to accept commands from external computer Microcontroller must automatically navigate a maze and find an objective Microcontroller must manually navigate a maze and find an objective with a distant pilot controlling it What we decided to do was build a martian explorer drone designed to catalog the surface of an alien city and identify different buildings. My Role: I did C coding, designed the IR sensor logic, tested the logic for all functions, wrote the script for the automatic maze navigation, and piloted the roomba during the live demonstration. Skills or knowledge gained: In this project I learned how to interface a microcontroller with different inputs and outputs. I learned how to use pulse width modulation to analog to digital signal, and I increased my competency in C coding. Resources used: C, Visial studio, ARM Cortex M4 technical documentation, IR sensor technical documentation.","title":"Projects"},{"location":"projects/#projects","text":"","title":"Projects"},{"location":"projects/#calendar-app-development-coms-309","text":"","title":"Calendar App Development - ComS 309"},{"location":"projects/#project-description","text":"This was a semester long group project with a team 4 students. We selected a theme, chose functional and asthetic requirements, and used the tools shown in class to create our application in 16 weeks. What we selected was a calendar coordination/ social media application where users can form groups and share events with their friends and group members, while the app automatically coordinates scheduels based on availability. Documentation: Project Block Diagram Program Requirements: User Login Add events, users, and grous Search for users, gropus, and events by name or tag Search for events by location Coordination of automatic event invitations Users can only view events within groups/ invite lists Users cannot view schedule details of other users Public events User to Uder, group, and event char function Google maps integration Notification system The purpose of this application is to streamline the coordination of availability between friends, coworkers, and groups so that they can have an easier time deciding on times, places, and invitees for events.","title":"Project Description:"},{"location":"projects/#my-role","text":"I originated the idea for this application, and was instrumental in its higher level design throughout the entire project. When working on code, I programmed the back end with a partner, I integrated API calls, managed the MySQL database, implemented a controller, server, repository model for the back-end's interraction with both the database and the front end.","title":"My Role:"},{"location":"projects/#skills-or-knowledge-gained","text":"On this project I learned to work with Intelli-J, how to write and call API's, manage a MySQL database, back end development, the Springboot framework, the use of postman for back-end development, how to use websockets, and version control with Gitlab.","title":"Skills or knowledge gained:"},{"location":"projects/#resources-used","text":"During this project we used tools such as Intelli-J, postman, SQL Workbench, Sprinbboot, Android Studio, Docker, Websockets, and various API's.","title":"Resources used:"},{"location":"projects/#pipeline-processor-design-cpre-381","text":"","title":"Pipeline Processor Design - CprE 381"},{"location":"projects/#project-description_1","text":"This was a semester long project in which I and a partner learned about the elements and design of a computer processor, pipelining, and the MIPS assembly architechure. We designed the processor fron the most basic elements, I built the ALU, the barrel shifter and others from basic components like simple logical gates. Those larger elemants were then combined into the different stages of the pipeline untill we had fully implemented the high level schematic design. This was all done in VDHL. Our design was fully able to run MIPS architechure instruction code from a binary file, we tested it on various sorting algorithms. Program Requirements: -Processor must be implemented in a pipeline design - Processor must run MIPS assembly with few errors","title":"Project Description:"},{"location":"projects/#my-role_1","text":"I and my partner colaboratively designed the higher level logic, we also worked the logical testing and troubleshooting together. I independantly designed the ALU, the registers, and the instruction memory logic.","title":"My Role:"},{"location":"projects/#skills-or-knowledge-gained_1","text":"The MIPS processor architecture was completly new to me at the begining of this class. I learned how to code in MIPS assembly, how the logic of the processor could be implemented in both single-cycle and pipeline processors, I learned VDHL code used for writing the logical circuits, how to read clock cycle diagrams, and how to troubleshoot the stages of a pipeline.","title":"Skills or knowledge gained:"},{"location":"projects/#resources-used_1","text":"This project was entirely writen in VDHL using ModelSim.","title":"Resources used:"},{"location":"projects/#roomba-martian-navigator-cpre-288","text":"","title":"Roomba Martian Navigator - CprE 288"},{"location":"projects/#project-description_2","text":"This was an incredibly enjoyable project. Again, it was a semester long. We designed and implemented the C code to run on an ARM Cortex M4 based microcontroller with various inputs and outputs. This microcontroller interfaced with UART, an IR sensor, and a roomba with pressure sensors. Our project was closed and open ended, we were given certian specifications, listed below, but we were able to design the implementation in an open ended way. We were also allowd to define the goal our roomba robot would fulfill. Program Requirements: Microcontroller must controll the roomba to preform specified task Microcontroller must interface with UART and IR sensors externally mounted to the roombs Microcontroller must detect objects using IR and roomba pressure sensors Microcontroller must correctly identify different kinds of obstacles Microcontroller must use UART to send data to a moniter Microcontroller must use UART to accept commands from external computer Microcontroller must automatically navigate a maze and find an objective Microcontroller must manually navigate a maze and find an objective with a distant pilot controlling it What we decided to do was build a martian explorer drone designed to catalog the surface of an alien city and identify different buildings.","title":"Project Description:"},{"location":"projects/#my-role_2","text":"I did C coding, designed the IR sensor logic, tested the logic for all functions, wrote the script for the automatic maze navigation, and piloted the roomba during the live demonstration.","title":"My Role:"},{"location":"projects/#skills-or-knowledge-gained_2","text":"In this project I learned how to interface a microcontroller with different inputs and outputs. I learned how to use pulse width modulation to analog to digital signal, and I increased my competency in C coding.","title":"Skills or knowledge gained:"},{"location":"projects/#resources-used_2","text":"C, Visial studio, ARM Cortex M4 technical documentation, IR sensor technical documentation.","title":"Resources used:"},{"location":"reflections/","text":"Reflections Each of the following reflections gives insight into different aspects of my time at Iowa State University. The first one is a cumulative summary of my time, covering the most importiant lessons I have learned, and their applications. The second one is a short summary of my general education experiences, specifically delving into multicultural communications. Finally, the third one is a reflection on my views on ethics. Cumulative Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here . General Education Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here . Ethical Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here .","title":"Reflections"},{"location":"reflections/#reflections","text":"Each of the following reflections gives insight into different aspects of my time at Iowa State University. The first one is a cumulative summary of my time, covering the most importiant lessons I have learned, and their applications. The second one is a short summary of my general education experiences, specifically delving into multicultural communications. Finally, the third one is a reflection on my views on ethics.","title":"Reflections"},{"location":"reflections/#cumulative","text":"Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here .","title":"Cumulative"},{"location":"reflections/#general-education","text":"Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here .","title":"General Education"},{"location":"reflections/#ethical","text":"Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here .","title":"Ethical"},{"location":"resume/","text":"Resume The following is my resume as of 10/19/2023, you can see a list of my major achievements as a Cyber Security Engineering student at Iowa State University, as well as some of my project highlights, and my work experience. Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here .","title":"Resume"},{"location":"resume/#resume","text":"The following is my resume as of 10/19/2023, you can see a list of my major achievements as a Cyber Security Engineering student at Iowa State University, as well as some of my project highlights, and my work experience. Download the full document as a PDF If you're seeing this message, your browser doesn't support iframes. You can download the resume here .","title":"Resume"},{"location":"senior/","text":"Engineering Art: Urban Infrastructure Imorovement Problem Statement: Generally, the public lacks some awareness of engineering problems, specifically the 14 Grand Challenges for Engineering, and their states of development. The understanding that the public has of the Grand Challenges (what they are and current state) influences their enthusiasm and engagement. If they do not understand the Challenges, then they will not have enthusiasm or engagement with their solutions. If they understand them then they will (more likely) have enthusiasm and engagement with their solutions. To address this issue, we aim to develop an interactive installation that appeals to people of all ages and effectively conveys Grand Challenges and their current states of development. An enthused and engaged public is a source of funding, research (new minds) and application. If the public is more educated, then Grand Challenges are more likely to be solved in a faster time. We will use an artistic demonstration to engage and educate the public in t he state of urban infrastructure development as a means to ensure they support the research and development of Grand Challenges. Project Description: The Engineering Grand Challenge we selected is Restore and Improve Urban Infrastructure proposed in the National Academy of Engineers' 21st Century Challenges. This list of complex problems speaks to the future of engineering. Each of the challenges represents a problem that signifigantly stands in the way of the developmental progress of our world. The solution we have focused on is developing a tool drastically speed up the process of urban planning. Currently, we have decided on the following project: A 3D urban development design tool that uses a touch-sensitive surface to detect and map physical blocks. Each block corresponds to different types of buildings or structures. When a user places a block on the touch-sensitive surface, a 3D representation of the building or structure appears in real-time on a display, allowing users to visualize and iterate on urban layouts quickly. Components: Touch-sensitive Surface: This will be a specialized piece of hardware designed to sense the location and types of blocks, we plan on using technologies like capacitive or resistive touch panels. Physical Blocks: Varied shapes, sizes, and possibly colors to represent different building types. These will be embedded with RFID or NFC tags or other markers to make them easily recognizable by the system. Display and Processing Hardware: A screen to show the 3D rendered model of the urban design. This could be a large monitor, projector, or even AR/VR headsets for a more immersive experience. The hardware will be a processor component capable of taking input from the Touch-sensitive surface, processing the data, and outputting the data needed for our display to visualize it. Software Backend: This will process the input from the touch surface, translate block placements into 3D buildings, and render the urban layout on the display. It will also include features like saving designs, modifying building specifications, or simulating various scenarios (like traffic flow or pedestrian pathways). Potential Features: Dynamic Scaling: Allow users to zoom in or out on the display to view the urban design from various scales. Real-time Analytics: As blocks are placed, the software could provide instant feedback on factors like population density, green space ratio, energy load, or estimated traffic flow. Different Modes: Switch between day and night views, or even seasonal views, to visualize how the urban space might look in different conditions. Scenario Simulations: Simulate scenarios such as traffic during rush hour, evacuation routes during emergencies, or sunlight distribution during different times of the day. Save & Load Designs: Provide the option for users to save their designs and load them later for further editing or comparison. Challenges & Solutions: This is an ongoing project, there hase not as of yet been any real prototyping, but some anticipated challenges are as follows. Accuracy of Block Detection: Ensuring the touch surface accurately detects each block's position and orientation might be a challenge. Using high-resolution touch panels or integrating additional sensors might help. Rendering Speed: The system should be able to render the 3D design in real-time as blocks are placed. Using efficient algorithms and possibly dedicated graphics hardware will be crucial. User Interface: The software should be intuitive, with clear icons and a minimal learning curve. User testing and feedback will be vital. Scalability: As urban designs grow complex, ensuring the system can handle large designs without lag or glitches will be crucial. This will require optimized software and possibly robust hardware components. My Role: Up until now my contribution to our project has primarily been in planing, documentation, and brainstorming. Now as we move into the design and implementation phases I will be primarily contributing by advising on cybersecurity best pracitices and software and hardware security reviewing. I will be coding, managing networks, setting up hardware, and assisting in development planning. The knowledge I have gained has primarily been in the application of the design thinking and development process. Download our project plan document as a PDF","title":"Senior Design"},{"location":"senior/#engineering-art-urban-infrastructure-imorovement","text":"","title":"Engineering Art: Urban Infrastructure Imorovement"},{"location":"senior/#problem-statement","text":"Generally, the public lacks some awareness of engineering problems, specifically the 14 Grand Challenges for Engineering, and their states of development. The understanding that the public has of the Grand Challenges (what they are and current state) influences their enthusiasm and engagement. If they do not understand the Challenges, then they will not have enthusiasm or engagement with their solutions. If they understand them then they will (more likely) have enthusiasm and engagement with their solutions. To address this issue, we aim to develop an interactive installation that appeals to people of all ages and effectively conveys Grand Challenges and their current states of development. An enthused and engaged public is a source of funding, research (new minds) and application. If the public is more educated, then Grand Challenges are more likely to be solved in a faster time. We will use an artistic demonstration to engage and educate the public in t he state of urban infrastructure development as a means to ensure they support the research and development of Grand Challenges.","title":"Problem Statement:"},{"location":"senior/#project-description","text":"The Engineering Grand Challenge we selected is Restore and Improve Urban Infrastructure proposed in the National Academy of Engineers' 21st Century Challenges. This list of complex problems speaks to the future of engineering. Each of the challenges represents a problem that signifigantly stands in the way of the developmental progress of our world. The solution we have focused on is developing a tool drastically speed up the process of urban planning. Currently, we have decided on the following project: A 3D urban development design tool that uses a touch-sensitive surface to detect and map physical blocks. Each block corresponds to different types of buildings or structures. When a user places a block on the touch-sensitive surface, a 3D representation of the building or structure appears in real-time on a display, allowing users to visualize and iterate on urban layouts quickly.","title":"Project Description:"},{"location":"senior/#components","text":"Touch-sensitive Surface: This will be a specialized piece of hardware designed to sense the location and types of blocks, we plan on using technologies like capacitive or resistive touch panels. Physical Blocks: Varied shapes, sizes, and possibly colors to represent different building types. These will be embedded with RFID or NFC tags or other markers to make them easily recognizable by the system. Display and Processing Hardware: A screen to show the 3D rendered model of the urban design. This could be a large monitor, projector, or even AR/VR headsets for a more immersive experience. The hardware will be a processor component capable of taking input from the Touch-sensitive surface, processing the data, and outputting the data needed for our display to visualize it. Software Backend: This will process the input from the touch surface, translate block placements into 3D buildings, and render the urban layout on the display. It will also include features like saving designs, modifying building specifications, or simulating various scenarios (like traffic flow or pedestrian pathways).","title":"Components:"},{"location":"senior/#potential-features","text":"Dynamic Scaling: Allow users to zoom in or out on the display to view the urban design from various scales. Real-time Analytics: As blocks are placed, the software could provide instant feedback on factors like population density, green space ratio, energy load, or estimated traffic flow. Different Modes: Switch between day and night views, or even seasonal views, to visualize how the urban space might look in different conditions. Scenario Simulations: Simulate scenarios such as traffic during rush hour, evacuation routes during emergencies, or sunlight distribution during different times of the day. Save & Load Designs: Provide the option for users to save their designs and load them later for further editing or comparison.","title":"Potential Features:"},{"location":"senior/#challenges-solutions","text":"This is an ongoing project, there hase not as of yet been any real prototyping, but some anticipated challenges are as follows. Accuracy of Block Detection: Ensuring the touch surface accurately detects each block's position and orientation might be a challenge. Using high-resolution touch panels or integrating additional sensors might help. Rendering Speed: The system should be able to render the 3D design in real-time as blocks are placed. Using efficient algorithms and possibly dedicated graphics hardware will be crucial. User Interface: The software should be intuitive, with clear icons and a minimal learning curve. User testing and feedback will be vital. Scalability: As urban designs grow complex, ensuring the system can handle large designs without lag or glitches will be crucial. This will require optimized software and possibly robust hardware components.","title":"Challenges &amp; Solutions:"},{"location":"senior/#my-role","text":"Up until now my contribution to our project has primarily been in planing, documentation, and brainstorming. Now as we move into the design and implementation phases I will be primarily contributing by advising on cybersecurity best pracitices and software and hardware security reviewing. I will be coding, managing networks, setting up hardware, and assisting in development planning. The knowledge I have gained has primarily been in the application of the design thinking and development process. Download our project plan document as a PDF","title":"My Role:"}]}